name = "Pallet Broker"

[metadata]
description = """Brokerage tool for managing Polkadot Core scheduling.

Properly described in RFC-0001 Agile Coretime."""
short_description = "FRAME Broker pallet"
is_essential = false
compatibility = "Two"
license = "Apache-2.0"
authors = ["ParityTechnologies"]
categories = ["Other"]
supported_template=["SoloChain","ParaChain","Minimal","Frontier","SoloFrontierChain"]
size = 10500
updated = "1729175503"

[runtime]
additional_runtime_lib_code = [
    "use sp_runtime::traits::Convert;",
    "use sp_runtime::traits::ConvertBack;",
]
additional_pallet_impl_code = """

pub struct SimpleBalanceConverter;

impl Convert<u128, u64> for SimpleBalanceConverter {
    fn convert(amount: u128) -> u64 {
        amount as u64  // This will truncate if the `u128` value is too large
    }
}

impl ConvertBack<u128, u64> for SimpleBalanceConverter {
    fn convert_back(amount: u64) -> u128 {
        amount as u128
    }
}

parameter_types! {
    pub const BrokerPalletId: PalletId = PalletId(*b"py/broke");
}

"""

# pub TimeslicePeriod: u32 = 20;
[runtime.optional_parameter_types.TimeslicePeriod]
name = "TimeslicePeriod"
description = "The period for processing timeslices."
prefix = "const"
p_type = "u32"
[runtime.optional_parameter_types.TimeslicePeriod.expression]
default_unit = ""
default_multiiplier = 20
format = "{}{}"
possible_units = []
multiplier_configurable = true

# pub MaxBroker: u32 = 100;
[runtime.optional_parameter_types.MaxBroker]
name = "MaxBroker"
description = "The maximum number of brokers allowed in the system."
prefix = "const"
p_type = "u32"
[runtime.optional_parameter_types.MaxBroker.expression]
default_unit = ""
default_multiiplier = 100
format = "{}{}"
possible_units = []
multiplier_configurable = true


[runtime.construct_runtime]
runtime = ["Broker", "pallet_broker::Pallet<Runtime>"]

[runtime.pallet_traits]
TimeslicePeriod = "TimeslicePeriod"
MaxLeasedCores = "MaxBroker"
MaxReservedCores = "MaxBroker"
RuntimeEvent = "RuntimeEvent"
WeightInfo = "pallet_broker::weights::SubstrateWeight<Runtime>"
Currency = "Balances"
AdminOrigin = "EnsureRoot<AccountId>"
OnRevenue = "()"                                                # "BurnCoretimeRevenue"
Coretime = "()"                                                 #"CoretimeInterface"
PriceAdapter = "pallet_broker::CenterTargetPrice<Balance>"
ConvertBalance = "SimpleBalanceConverter"                       # "sp_runtime::traits::Identity"
PalletId = "BrokerPalletId"


[dependencies.pallet]
package = "pallet-broker"
alias = "pallet broker"
default_features = false
git_repo = "https://github.com/paritytech/polkadot-sdk.git"
tag = "polkadot-v1.14.0"
