name = "Pallet Scheduler"

[metadata]
description = "The Scheduler pallet allows scheduling the execution of specific calls at a designated block or within a specific time period. These scheduled calls can be named or anonymous, with the option to cancel them before execution."
short_description = "FRAME Scheduler pallet"
is_essential = false
compatibility = "Two"
license = "Apache-2.0"
authors = ["ParityTechnologies"]
categories = ["Runtime"]
supported_template=["SoloChain","ParaChain","Minimal","Frontier","SoloFrontierChain"]
size = 10500
updated = "1729175503"

[runtime]
additional_runtime_lib_code = ["use frame_support::traits::EqualPrivilegeOnly;"]


# pub const MaximumSchedulerWeight: Weight = Perbill::from_percent(80) * BlockWeights::get().max_block;
[runtime.optional_parameter_types.MaximumSchedulerWeight]
name = "MaximumSchedulerWeight"
description = "The maximum weight for the scheduler, as a percentage of the maximum block weight."
prefix = "empty"
p_type = "Weight"
[runtime.optional_parameter_types.MaximumSchedulerWeight.expression]
default_unit = ""
default_multiiplier = 80
format = "{}Perbill::from_percent({}) * BlockWeights::get().max_block"
possible_units = []
multiplier_configurable = true


[runtime.construct_runtime]
runtime = ["Scheduler", "pallet_scheduler::Pallet<Runtime>"]

[runtime.pallet_traits]
MaximumWeight = "MaximumSchedulerWeight"
MaxScheduledPerBlock = "()"
RuntimeOrigin = "RuntimeOrigin"
PalletsOrigin = "OriginCaller"
WeightInfo = "()"
OriginPrivilegeCmp = "EqualPrivilegeOnly"
RuntimeCall = "RuntimeCall"
ScheduleOrigin = "EnsureRoot<AccountId>"
Preimages = "()"
RuntimeEvent = "RuntimeEvent"

[dependencies.pallet]
package = "pallet-scheduler"
alias = "pallet scheduler"
default_features = false
git_repo = "https://github.com/paritytech/polkadot-sdk.git"
tag = "polkadot-v1.14.0"
