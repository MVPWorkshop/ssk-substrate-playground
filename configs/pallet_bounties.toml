name = "Pallet Bounties"

[metadata]
description = "The Bounties pallet facilitates the management and payout of rewards for completing specific tasks or objectives, with a curator overseeing the process, and the ability to create child bounties for splitting larger tasks. It works closely with the Treasury pallet."
short_description = "FRAME Bounties pallet"
is_essential = false
compatibility = "Two"
license = "Apache-2.0"
authors = ["ParityTechnologies"]
categories = ["Governance"]
size = 10500
updated = "1729175503"

# ! BountyDepositBase
[runtime.optional_parameter_types.BountyDepositBase]
name = "BountyDepositBase"
description = "The base deposit required to propose a bounty. This ensures proposers have a minimum stake in the process."
prefix = "const"
p_type = "Balance"

[runtime.optional_parameter_types.BountyDepositBase.expression]
default_unit = "DOLLARS"
default_multiiplier = 1
format = "{} * {}"
possible_units = ["DOLLARS", "CENTS", "MILLICENTS"]
multiplier_configurable = true

# ! BountyMaximumReasonLenght
[runtime.optional_parameter_types.BountyMaximumReasonLength]
name = "BountyMaximumReasonLength"
description = "The maximum length for the reason field in bounty proposals."
prefix = "const"
p_type = "u32"

[runtime.optional_parameter_types.BountyMaximumReasonLength.expression]
default_unit = ""
default_multiiplier = 16384
format = "{}{}"
possible_units = []
multiplier_configurable = true

# ! CuratorDepositMultiplier
[runtime.optional_parameter_types.CuratorDepositMultiplier]
name = "CuratorDepositMultiplier"
description = "The proportion of the curator's deposit that is rewarded upon completion of the bounty."
prefix = "const"
p_type = "Permill"

[runtime.optional_parameter_types.CuratorDepositMultiplier.expression]
default_unit = ""
default_multiiplier = 50
format = "{}Permill::from_percent({})"
possible_units = []
multiplier_configurable = true

# ! BountyDepositPayoutDelay
[runtime.optional_parameter_types.BountyDepositPayoutDelay]
name = "BountyDepositPayoutDelay"
description = "The delay in blocks before a bounty deposit is paid out."
prefix = "const"
p_type = "BlockNumber"

[runtime.optional_parameter_types.BountyDepositPayoutDelay.expression]
default_unit = "DAYS"
default_multiiplier = 1
format = "{} * {}"
possible_units = ["DAYS", "HOURS", "MINUTES"]
multiplier_configurable = true

# ! BountyUpdatePeriod
[runtime.optional_parameter_types.BountyUpdatePeriod]
name = "BountyUpdatePeriod"
description = "The number of blocks during which a bounty can be updated."
prefix = "const"
p_type = "BlockNumber"

[runtime.optional_parameter_types.BountyUpdatePeriod.expression]
default_unit = "DAYS"
default_multiiplier = 14
format = "{} * {}"
possible_units = ["DAYS", "HOURS", "MINUTES"]
multiplier_configurable = true

# ! BountyValueMinimum
[runtime.optional_parameter_types.BountyValueMinimum]
name = "BountyValueMinimum"
description = "The minimum value required to fund a bounty."
prefix = "const"
p_type = "Balance"

[runtime.optional_parameter_types.BountyValueMinimum.expression]
default_unit = "DOLLARS"
default_multiiplier = 5
format = "{} * {}"
possible_units = ["DOLLARS", "CENTS","MILLICENTS"]
multiplier_configurable = true

# ! CuratorDepositMin
[runtime.optional_parameter_types.CuratorDepositMin]
name = "CuratorDepositMin"
description = "The minimum deposit required from a curator."
prefix = "const"
p_type = "Balance"

[runtime.optional_parameter_types.CuratorDepositMin.expression]
default_unit = "DOLLARS"
default_multiiplier = 1
format = "{} * {}"
possible_units = ["DOLLARS", "CENTS", "MILLICENTS"]
multiplier_configurable = true


# ! CuratorDepositMax
[runtime.optional_parameter_types.CuratorDepositMax]
name = "CuratorDepositMax"
description = "The maximum deposit required from a curator."
prefix = "const"
p_type = "Balance"

[runtime.optional_parameter_types.CuratorDepositMax.expression]
default_unit = "DOLLARS"
default_multiiplier = 100
format = "{} * {}"
possible_units = ["DOLLARS", "CENTS", "MILLICENTS"]
multiplier_configurable = true

# ! BountyDataDepositPerByte
[runtime.optional_parameter_types.BountyDataDepositPerByte]
name = "BountyDataDepositPerByte"
description = "The deposit required per byte of bounty description data."
prefix = "const"
p_type = "Balance"

[runtime.optional_parameter_types.BountyDataDepositPerByte.expression]
default_unit = "CENTS"
default_multiiplier = 1
format = "{} * {}"
possible_units = ["DOLLARS", "CENTS", "MILLICENTS"]
multiplier_configurable = true


[runtime.construct_runtime]
runtime = ["Bounties", "pallet_bounties::Pallet<Runtime>"]

[runtime.pallet_traits]
BountyDepositPayoutDelay = "BountyDepositPayoutDelay"
CuratorDepositMultiplier = "CuratorDepositMultiplier"
DataDepositPerByte = "BountyDataDepositPerByte"
ChildBountyManager = "()"
OnSlash = "()"
BountyValueMinimum = "BountyValueMinimum"
RuntimeEvent = "RuntimeEvent"
BountyUpdatePeriod = "BountyUpdatePeriod"
MaximumReasonLength = "BountyMaximumReasonLength"
WeightInfo = "pallet_bounties::weights::SubstrateWeight<Runtime>"
CuratorDepositMax = "CuratorDepositMax"
BountyDepositBase = "BountyDepositBase"
CuratorDepositMin = "CuratorDepositMin"

[dependencies]
required_pallets = ["Pallet Assets", "Pallet Treasury"]
[dependencies.pallet]
package = "pallet-bounties"
alias = "pallet bounties"
default_features = false
git_repo = "https://github.com/paritytech/polkadot-sdk.git"
tag = "polkadot-v1.14.0"
