name = "Pallet bounties"

[metadata]
description = "The Bounties pallet facilitates the management and payout of rewards for completing specific tasks or objectives, with a curator overseeing the process, and the ability to create child bounties for splitting larger tasks. It works closely with the Treasury pallet."
short_description = "FRAME bounties pallet"
is_essential = false
compatibility = "Two"
license = "Apache-2.0"
authors = ["ParityTechnologies"]
categories = ["Governance"]
size = 10500
updated = "1729175503"

[runtime]
additional_pallet_impl_code = """

parameter_types! {
    pub const BountyDepositPayoutDelay: BlockNumber = DAYS;
    pub const BountyUpdatePeriod: BlockNumber = 14 * DAYS;
    pub const BountyValueMinimum: Balance = 5 * DOLLARS;
    pub const CuratorDepositMin: Balance = DOLLARS;
    pub const CuratorDepositMax: Balance = 100 * DOLLARS;
    pub const BountyDataDepositPerByte: Balance = CENTS;
}
"""
[[runtime.optional_parameter_types]]
name = "BountyDepositBase"
description = "The base deposit required to propose a bounty. This ensures proposers have a minimum stake in the process."
prefix = "const"
p_type = "Balance"

[runtime.optional_parameter_types.expression]
default_unit = "DOLLARS"
default_multiiplier = 1
format = "{} * {}"
possible_units = ["DOLLARS", "CENTS", "MILLICENTS"]
multiplier_configurable = true

[[runtime.optional_parameter_types]]
name = "BountyMaximumReasonLength"
description = "The maximum length for the reason field in bounty proposals."
prefix = "const"
p_type = "u32"

[runtime.optional_parameter_types.expression]
default_unit = ""
default_multiiplier = 16384
format = "{}{}"
possible_units = []
multiplier_configurable = true

[[runtime.optional_parameter_types]]
name = "CuratorDepositMultiplier"
description = "The proportion of the curator's deposit that is rewarded upon completion of the bounty."
prefix = "const"
p_type = "Permill"

[runtime.optional_parameter_types.expression]
default_unit = ""
default_multiiplier = 50
format = "{}Permill::from_percent({})"
possible_units = []
multiplier_configurable = true

[runtime.construct_runtime]
runtime = ["Bounties", "pallet_bounties::Pallet<Runtime>"]

[runtime.pallet_traits]
BountyDepositPayoutDelay = "BountyDepositPayoutDelay"
CuratorDepositMultiplier = "CuratorDepositMultiplier"
DataDepositPerByte = "BountyDataDepositPerByte"
ChildBountyManager = "()"
OnSlash = "()"
BountyValueMinimum = "BountyValueMinimum"
RuntimeEvent = "RuntimeEvent"
BountyUpdatePeriod = "BountyUpdatePeriod"
MaximumReasonLength = "BountyMaximumReasonLength"
WeightInfo = "pallet_bounties::weights::SubstrateWeight<Runtime>"
CuratorDepositMax = "CuratorDepositMax"
BountyDepositBase = "BountyDepositBase"
CuratorDepositMin = "CuratorDepositMax"

[dependencies]
required_pallets = ["Pallet assets", "Pallet treasury"]
[dependencies.pallet]
package = "pallet-bounties"
alias = "pallet bounties"
default_features = false
git_repo = "https://github.com/paritytech/polkadot-sdk.git"
tag = "polkadot-v1.14.0"
