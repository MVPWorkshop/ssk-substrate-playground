name = "Pallet Tips"

[metadata]
description = """NOTE: This pallet is tightly coupled with pallet-treasury.

A subsystem to allow for an agile “tipping” process, whereby a reward may be given without first having a pre-determined stakeholder group come to consensus on how much should be paid.

A group of Tippers is determined through the config Config. After half of these have declared some amount that they believe a particular reported reason deserves, then a countdown period is entered where any remaining members can declare their tip amounts also. After the close of the countdown period, the median of all declared tips is paid to the reported beneficiary, along with any finders fee, in case of a public (and bonded) original report.
"""

short_description = "FRAME Tips pallet"
is_essential = false
compatibility = "Two"
license = "Apache-2.0"
authors = ["ParityTechnologies"]
categories = ["Assets"]
supported_template=["SoloChain","ParaChain","Minimal","Frontier","SoloFrontierChain"]
size = 10500
updated = "1729175503"

# pub const MaxTipAmount: u128 = 5_000_000 * 1_000_000_000;
[runtime.optional_parameter_types.MaxTipAmount]
name = "MaxTipAmount"
description = "The maximum amount allowed for a tip."
prefix = "const"
p_type = "u128"

[runtime.optional_parameter_types.MaxTipAmount.expression]
default_unit = "1_000_000_000"
default_multiiplier = 5_000_000
format = "{} * {}"
possible_units = ["1_000_000_000"]
multiplier_configurable = true
# pub const TipFindersFee: Percent = Percent::from_percent(20);
[runtime.optional_parameter_types.TipFindersFee]
name = "TipFindersFee"
description = "The percentage of the tip given to the finder of the tip."
prefix = "const"
p_type = "Percent"

[runtime.optional_parameter_types.TipFindersFee.expression]
default_unit = ""
default_multiiplier = 20
format = "{}Percent::from_percent({})"
possible_units = []
multiplier_configurable = true
# pub const TipReportDepositBase: Balance = 1 * DOLLARS;
[runtime.optional_parameter_types.TipReportDepositBase]
name = "TipReportDepositBase"
description = "The base deposit required to report a tip."
prefix = "const"
p_type = "Balance"

[runtime.optional_parameter_types.TipReportDepositBase.expression]
default_unit = "DOLLARS"
default_multiiplier = 1
format = "{} * {}"
possible_units = ["DOLLARS", "CENTS", "MILLICENTS"]
multiplier_configurable = true
# pub const MaximumReasonLength: u32 = 300;
[runtime.optional_parameter_types.MaximumReasonLength]
name = "MaximumReasonLength"
description = "The maximum length of the reason field for a tip."
prefix = "const"
p_type = "u32"

[runtime.optional_parameter_types.MaximumReasonLength.expression]
default_unit = ""
default_multiiplier = 300
format = "{}{}"
possible_units = []
multiplier_configurable = true
# pub const TipCountdown: BlockNumber = 1 * DAYS;
[runtime.optional_parameter_types.TipCountdown]
name = "TipCountdown"
description = "The duration in blocks before a tip closes for voting."
prefix = "const"
p_type = "BlockNumber"

[runtime.optional_parameter_types.TipCountdown.expression]
default_unit = "DAYS"
default_multiiplier = 1
format = "{} * {}"
possible_units = ["DAYS", "HOURS", "MINUTES"]
multiplier_configurable = true
# pub const TipDataDepositPerByte: Balance = 1 * CENTS;
[runtime.optional_parameter_types.TipDataDepositPerByte]
name = "TipDataDepositPerByte"
description = "The deposit required per byte of tip data."
prefix = "const"
p_type = "Balance"

[runtime.optional_parameter_types.TipDataDepositPerByte.expression]
default_unit = "CENTS"
default_multiiplier = 1
format = "{} * {}"
possible_units = ["CENTS", "DOLLARS", "MILLICENTS"]
multiplier_configurable = true


[runtime.construct_runtime]
runtime = ["Tips", "pallet_tips::Pallet<Runtime>"]

[runtime.pallet_traits]
Tippers = "pallet_membership::Pallet<Runtime>"
TipCountdown = "TipCountdown"
OnSlash = "()"
RuntimeEvent = "RuntimeEvent"
DataDepositPerByte = "TipDataDepositPerByte"
MaxTipAmount = "MaxTipAmount"
TipReportDepositBase = "TipReportDepositBase"
WeightInfo = "::pallet_tips::weights::SubstrateWeight<Runtime>"
MaximumReasonLength = "MaximumReasonLength"
TipFindersFee = "TipFindersFee"


[dependencies]
required_pallets = ["Pallet Treasury", "Pallet Membership", "Pallet Assets"]
# Assets is deep dependency

[dependencies.pallet]
package = "pallet-tips"
alias = "pallet tips"
default_features = false
git_repo = "https://github.com/paritytech/polkadot-sdk.git"
tag = "polkadot-v1.14.0"
