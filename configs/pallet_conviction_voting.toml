name = "Pallet Conviction Voting"

[metadata]
description = """The pallet_conviction_voting is a module within the Substrate framework designed to manage voting mechanisms in blockchain governance. It enables stakeholders to cast votes on referenda, allowing them to express their support or opposition to proposals. A distinctive feature of this pallet is the incorporation of "conviction," which allows voters to amplify the weight of their votes by committing to lock their tokens for extended periods. This mechanism incentivizes long-term commitment and ensures that those willing to lock their tokens for longer durations have a more significant influence on decision-making processes. """
short_description = "FRAME Conviction Voting"
compatibility = "Two"
license = "Apache-2.0"
authors = ["ParityTechnologies"]
category = "Governance"
supported_template=["SoloChain","ParaChain","Minimal","Frontier","SoloFrontierChain"]
size = 10500
updated = "1729175503"

# pub const VoteLockingPeriod: BlockNumber = 1 * DAYS;
[runtime.optional_parameter_types.VoteLockingPeriod]
name = "VoteLockingPeriod"
description = "The duration for which votes are locked, expressed in blocks."
prefix = "const"
p_type = "BlockNumber"
[runtime.optional_parameter_types.VoteLockingPeriod.expression]
default_unit = "DAYS"
default_multiiplier = 1
format = "{} * {}"
possible_units = ["DAYS", "HOURS", "MINUTES"]
multiplier_configurable = true

# pub const MaxVotesConvictionVoting: u32 = 512;
[runtime.optional_parameter_types.MaxVotesConvictionVoting]
name = "MaxVotesConvictionVoting"
description = "The maximum number of votes allowed in conviction voting."
prefix = "const"
p_type = "u32"
[runtime.optional_parameter_types.MaxVotesConvictionVoting.expression]
default_unit = ""
default_multiiplier = 512
format = "{}{}"
possible_units = []
multiplier_configurable = true

[runtime.construct_runtime]
runtime = ["ConvictionVoting", "pallet_conviction_voting::Pallet<Runtime>"]

[runtime.pallet_traits]
MaxVotes = "MaxVotesConvictionVoting"
VoteLockingPeriod = "VoteLockingPeriod"
WeightInfo = "pallet_conviction_voting::weights::SubstrateWeight<Runtime>"
RuntimeEvent = "RuntimeEvent"
Currency = "Balances"
Polls = "Referenda"
MaxTurnout = "frame_support::traits::ActiveIssuanceOf<Balances, Self::AccountId>"


[dependencies]
required_pallets = [
    "Pallet Referenda",
    "Pallet Scheduler",
    "Pallet Preimage",
    "Pallet Treasury",
    "Pallet Assets",
]
# All are deep dependencies of Referenda

[dependencies.pallet]
package = "pallet-conviction-voting"
alias = "pallet conviction voting"
default_features = false
git_repo = "https://github.com/paritytech/polkadot-sdk.git"
tag = "polkadot-v1.14.0"
