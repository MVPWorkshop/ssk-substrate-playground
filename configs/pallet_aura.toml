name = "Pallet Aura"

[metadata]
description = "The Aura module extends Aura consensus by managing offline reporting."
short_description = "FRAME AURA consensus pallet"
is_essential = ["SoloChain","SoloFrontierChain","ParaChain","Frontier"]

compatibility = "Two"
license = "Apache-2.0"
authors = ["ParityTechnologies"]
category = "Consensus"
supported_template = [
    "SoloChain",
    "ParaChain",
    "Minimal",
    "Frontier",
    "SoloFrontierChain",
]
size = 5078
updated = "1729175503"
use_cases = ["Gaming", "SupplyChain"]

[runtime.construct_runtime]
runtime = ["Aura", "pallet_aura"]

[runtime]
# pub const AllowMultipleBlocksPerSlot: bool = false;
[runtime.optional_parameter_types.AllowMultipleBlocksPerSlot]
name = "AllowMultipleBlocksPerSlot"
description = "A boolean flag to allow or disallow multiple blocks to be produced in the same slot."
prefix = "const"
p_type = "bool"
[runtime.optional_parameter_types.AllowMultipleBlocksPerSlot.expression]
default_unit = "false"
default_multiplier = 1
format = "{}"
possible_units = ["true", "false"]
multiplier_configurable = false

# pub const MaxAuthorities: u32 = 32;
[runtime.optional_parameter_types.MaxAuthoritiesAura]
name = "MaxAuthoritiesAura"
description = "The maximum number of authorities allowed in the consensus mechanism."
prefix = "const"
p_type = "u32"
[runtime.optional_parameter_types.MaxAuthoritiesAura.expression]
default_unit = ""
default_multiplier = 32
format = "{}{}"
possible_units = []
multiplier_configurable = true


[runtime.pallet_traits]
AuthorityId = "AuraId"
SlotDuration = "pallet_aura::MinimumPeriodTimesTwo<Runtime>"
DisabledValidators = "()"
AllowMultipleBlocksPerSlot = "AllowMultipleBlocksPerSlot"
MaxAuthorities = "MaxAuthoritiesAura"

[dependencies.pallet]
package = "pallet-aura"
alias = "pallet aura"
default_features = false
git_repo = "https://github.com/paritytech/polkadot-sdk.git"
tag = "polkadot-v1.14.0"
